#
# nmake [CFG=Rel] [MACHINE=x64] [COMPILER=VS2012] -f makefile.wnt
#
# with default to Debug in 32bit for VS2008.
#
# Make sure to use the 64 bit cl.exe compiler, if using 64 bits (run
# vcvarsx86_amd64.bat or similar that is under MSVS9.0/VC/bin/x86_amd64).
#

include <ntwin32.mak>

MAKE = nmake

!IF "$(COMPILER)" == ""
COMPILER = VS2008
!ENDIF

#
# The XXX_DIR variables below MUST have ABSOLUTE path. Since this file
# is sourced from several directories relative path specification will
# be simple wrong.
#
IRIT_SRC_DIR = c:\irit\irit

!IF "$(MACHINE)" == "x64"
IRIT_64_PF = 64
!ELSE
IRIT_64_PF =
!ENDIF

#
# The following variables should be commented out if the relevant package
# is not available.  See also below, for more information on these possible
# extended support from IRIT.
#

IRIT_URT = c:\c\urt		# Utah raster toolkit - RLE image format
IRIT_GIF = c:\c\giflib		# giflib - IRIT_GIF image format
IRIT_PNG = c:\c\libpng\lpng126	# libpng - IRIT_PNG image format (needs gzip)
IRIT_JPG = c:\c\libjpeg\jpeg-9a	# libjpeg - IRIT_JPG image format (needs)
IRIT_XML = c:\c\LibRoXML\libroxml-2.2.1	# libroxml - IRIT_XML XML read/write format
IRIT_GZIP = c:\c\zlib		# IRIT_GZIP compression library
#IRIT_MAGELLAN = c:\c\magellan	# IRIT_MAGELLAN 3D mouse support
#IRIT_OGL_CG = C:\Program Files\NVIDIA Corporation\Cg
				# Open GL CG GPU programming SDK
!IF "$(COMPILER)" == "VS2008"
!IF "$(MACHINE)" == "x64"
conflags = /incremental:no /nologo
guiflags = /incremental:no /nologo
!ELSE
IRIT_FFMPEG = c:\c\FFMpeg\FFMpeg # FFMPEG Audio/Video decoding library
IRIT_OGL_GLUT = c:\c\glut	# GLUT GUI for Open GL library
IRIT_SW_DBG = c:\c\StackWalker	# Debug stack tracing abilities
!ENDIF
!ENDIF

!IF "$(COMPILER)" == "VS2012"
!IF "$(MACHINE)" == "x64"
# Bug in headers of the make forces wrong -subsystem.  Overwide here:
conflags = /machine:x64 /incremental:no /nologo
guiflags = /machine:x64 /incremental:no /nologo
!ELSE
IRIT_FFMPEG = c:\c\FFMpeg\FFMpeg # FFMPEG Audio/Video decoding library
# Bug in headers of the make forces wrong -subsystem.  Overwide here:
conflags = /incremental:no /nologo
guiflags = /incremental:no /nologo
!ENDIF
!ENDIF

#####################################################################
# It is likely you need not edit anything below this point!
#####################################################################

!IF "$(CFG)" == "Release" || "$(CFG)" == "Rel"
DEBUG_PREFIX = 
!ELSE
DEBUG_PREFIX = D
!ENDIF

#
# All libraries created will be installed into the IRIT_LIB_DIR directory.
#
IRIT_LIB_DIR = $(IRIT_SRC_DIR)\lib$(IRIT_64_PF)

#
# All includes files associated with the installed libraries will be
# installed into the IRIT_INC_DIR directory.
#
IRIT_INC_DIR = $(IRIT_SRC_DIR)

#
# All binaries created will be installed into the IRIT_BIN_DIR directory.
#
IRIT_BIN_DIR = $(IRIT_SRC_DIR)\ntbin$(IRIT_64_PF)

#
# Support for RLE image read/write using Utah Raster Toolkit (IRIT_URT) lib.
# You can ftp it from cs.utah.edu.
#
!IF "$(IRIT_URT)" != ""
IRIT_URT_INC = -I$(IRIT_URT)\include
IRIT_URT_LIB = $(IRIT_URT)\lib\$(COMPILER)\rle$(DEBUG_PREFIX)$(IRIT_64_PF).lib
IRIT_URT_FLAGS = -DIRIT_HAVE_URT_RLE
!MESSAGE Irit Makefile: IRIT_URT/RLE image format is supported
!ELSE
!MESSAGE Irit Makefile: IRIT_URT/RLE image format is NOT supported
!ENDIF

#
# Support for IRIT_GIF image read/write using the giflib toolkit library.
# You can ftp it from http://catb.org/~esr/giflib/doc/gif_lib.html
#
!IF "$(IRIT_GIF)" != ""
IRIT_GIF_INC = -I$(IRIT_GIF)\lib
IRIT_GIF_LIB = $(IRIT_GIF)\lib\$(COMPILER)\libgif$(IRIT_64_PF).lib
IRIT_GIF_FLAGS = -DIRIT_HAVE_GIF_LIB
!MESSAGE Irit Makefile: IRIT_GIF image format is supported
!ELSE
!MESSAGE Irit Makefile: IRIT_GIF image format is NOT supported
!ENDIF

#
# Support for IRIT_PNG image read/write using the pnglib toolkit library.
# You can ftp it from http://www.libpng.org/pub/png/libpng.html
# libpng also requires zlib.
#
!IF "$(IRIT_PNG)" != ""
IRIT_PNG_INC = -I$(IRIT_PNG) 
IRIT_PNG_LIB = $(IRIT_PNG)\$(COMPILER)\libpng$(DEBUG_PREFIX)$(IRIT_64_PF).lib
IRIT_PNG_FLAGS = -DIRIT_HAVE_PNG_LIB
!MESSAGE Irit Makefile: IRIT_PNG image format is supported
!ELSE
!MESSAGE Irit Makefile: IRIT_PNG image format is NOT supported
!ENDIF

#
# Support for IRIT_JPG image read/write using the linjpeg toolkit library.
# You can ftp it from http://www.ijg.org
#
!IF "$(IRIT_JPG)" != ""
IRIT_JPG_INC = -I$(IRIT_JPG) 
IRIT_JPG_LIB = $(IRIT_JPG)\$(COMPILER)\libjpeg$(DEBUG_PREFIX)$(IRIT_64_PF).lib
IRIT_JPG_FLAGS = -DIRIT_HAVE_JPG_LIB
!MESSAGE Irit Makefile: IRIT_JPG image format is supported
!ELSE
!MESSAGE Irit Makefile: IRIT_JPG image format is NOT supported
!ENDIF

#
# Support for IRIT_FFMPEG video read/write using the ffmpeg toolkit library.
# See included build document for updating to new versions.
# ffmpeg does not require any additional libraries.
#
!IF "$(IRIT_FFMPEG)" != ""
IRIT_FFMPEG_INC = -I$(IRIT_FFMPEG)\include
IRIT_FFMPEG_LIB = $(IRIT_FFMPEG)\lib$(IRIT_64_PF)
IRIT_FFMPEG_EXTRA_LIBS = 
IRIT_FFMPEG_LIBS = /LIBPATH:$(IRIT_FFMPEG_LIB) avcodec.lib avformat.lib avutil.lib swscale.lib
IRIT_FFMPEG_FLAGS = -DIRIT_HAVE_FFMPEG
!MESSAGE Irit Makefile: IRIT_FFMPEG library is supported
!ELSE
!MESSAGE Irit Makefile: IRIT_FFMPEG library is NOT supported
!ENDIF

#
# Support for IRIT_XML read/write using the roxml toolkit library.
# You can ftp it from http://www.libroxml.net
#
!IF "$(IRIT_XML)" != ""
IRIT_XML_INC = -I$(IRIT_XML)\inc
IRIT_XML_LIB = $(IRIT_XML)\$(COMPILER)\libROXML$(DEBUG_PREFIX)$(IRIT_64_PF).lib
IRIT_XML_FLAGS = -DIRIT_HAVE_XML_LIB
!MESSAGE Irit Makefile: IRIT_XML read/write is supported
!ELSE
!MESSAGE Irit Makefile: IRIT_XML read/write is NOT supported
!ENDIF

#
# Support for IRIT_GZIP image read/write using the gzip toolkit library.
# You can ftp it from http://www.gzip.org/zlib/
#
!IF "$(IRIT_GZIP)" != ""
IRIT_GZIP_INC = -I$(IRIT_GZIP)
IRIT_GZIP_LIB = $(IRIT_GZIP)\$(COMPILER)\zlib$(DEBUG_PREFIX)$(IRIT_64_PF).lib
IRIT_GZIP_FLAGS = -DIRIT_HAVE_GZIP_LIB
!MESSAGE Irit Makefile: IRIT_GZIP Compression is supported
!ELSE
!MESSAGE Irit Makefile: IRIT_GZIP Compression is NOT supported
!ENDIF

#
# Support for IRIT_MAGELLAN/SpaceMouse drivers
#
!IF "$(IRIT_MAGELLAN)" != ""
IRIT_MAGELLAN_INC = -I$(IRIT_MAGELLAN)\inc
IRIT_MAGELLAN_LIB = $(IRIT_MAGELLAN)\lib\$(COMPILER)\siapp.lib
IRIT_MAGELLAN_FLAGS = -DIRIT_HAVE_MAGELLAN_LIB
!MESSAGE Irit Makefile: IRIT_MAGELLAN 3D Mouse is supported
!ELSE
!MESSAGE Irit Makefile: IRIT_MAGELLAN 3D Mouse is NOT supported
!ENDIF

#
# Support for OpenGL CG.
#
!IF "$(IRIT_OGL_CG)" != ""
OGL_NVIDIA_EXTENSION = "\Program Files\NVIDIA Corporation\NVIDIA OpenGL SDK 10"
IRIT_OGL_CG_INC = -I$(OGL_NVIDIA_EXTENSION)\common\GLEW\include -I$(IRIT_OGL_CG)\include
IRIT_OGL_CG_LIB = $(IRIT_OGL_CG)\lib\$(COMPILER)\cg.lib $(IRIT_OGL_CG)\lib\$(COMPILER)\cgGL.lib $(OGL_NVIDIA_EXTENSION)\common\GLEW\lib\$(COMPILER)\glew32.lib
IRIT_OGL_CG_FLAGS = -DIRIT_HAVE_OGL_CG_LIB
!MESSAGE Irit Makefile: Open GL CG (GPU) is supported
!ELSE
!MESSAGE Irit Makefile: Open GL CG (GPU) is NOT supported
!ENDIF

#
# Support for OpenGL GLUT.
#
!IF "$(IRIT_OGL_GLUT)" != ""
IRIT_OGL_GLUT_INC = -I$(IRIT_OGL_GLUT)\include
IRIT_OGL_GLUT_LIB = $(IRIT_OGL_GLUT)\$(COMPILER)\glut32.lib
IRIT_OGL_GLUT_FLAGS = -DIRIT_HAVE_OGL_GLUT
!MESSAGE Irit Makefile: Open GL GLUT is supported
!ELSE
!MESSAGE Irit Makefile: Open GL GLUT is NOT supported
!ENDIF

#
# Support for Stack Walking in debug mode.
#
!IF "$(IRIT_SW_DBG)" != ""
IRIT_SW_DBG_INC = -I$(IRIT_SW_DBG)
IRIT_SW_DBG_LIB = $(IRIT_SW_DBG)\$(COMPILER)\StackWalker.lib
IRIT_SW_DBG_FLAGS = -DIRIT_HAVE_SW_DBG
!MESSAGE Irit Makefile: Stack Walking is supported
!ELSE
!MESSAGE Irit Makefile: Stack Walking is NOT supported
!ENDIF

#
# Support for compressed binary files. 
# This option also requires -DIRIT_HAVE_GZIP_LIB.
#
# IPC_COMP = -DIPC_BIN_COMPRESSION

#
# Quiet strings
#
# QUIET_STR = -DIRIT_QUIET_STRINGS

#
# Type of windowing system.  W95/98/NT/2000 should use __WINNT__
#

!iF "$(MACHINE)" == "x64"
IRITWINDOW = -D__WINNT__ -D_WIN64 -D_AMD64_ -D__OPENGL__
!ELSE
IRITWINDOW = -D__WINNT__ -D_X86_=1 -DWIN32 -D__OPENGL__
!ENDIF

#############################################################################
# Flags for Mircosoft C compiler, Windows NT
#

IRITCC = cl
DFLAGS = $(QUIET_STR) $(IRITWINDOW) $(IPC_COMP) -DRANDOM_IRIT -DWINNT_SETARGV -D_CRT_SECURE_NO_DEPRECATE -W3 -nologo -arch:SSE2 -fp:precise # -fp:fast
IRITLIB = $(implib) $(LTCG_LNK)
IRITCONLINK = $(link) /dll /manifest
IRITMANIFEST = mt

!IF "$(CFG)" == "Release" || "$(CFG)" == "Rel"
#
# **** RELEASE ****
#

CFLAGS = -O2 -Ot -Oy -Gy $(LTCG_CL) -MD $(DFLAGS) $(IRIT_URT_INC) $(IRIT_GIF_INC) $(IRIT_PNG_INC) $(IRIT_JPG_INC) $(IRIT_FFMPEG_INC) $(IRIT_XML_INC) $(IRIT_MAGELLAN_INC) $(IRIT_GZIP_INC) $(IRIT_OGL_CG_INC) $(IRIT_OGL_GLUT_INC) -DNDEBUG

# Link time code generation - very slow linking, but much faster code.
LTCG_CL = -GL
LTCG_LNK = -LTCG

IRITCONLINK = $(link) /manifest $(conflags) $(LTCG_LNK) # $(linkdebug)
IRITGUILINK = $(link) /manifest $(guiflags) $(LTCG_LNK) # $(linkdebug)
IRIT_LIBCMT = /nodefaultlib:libcmt.lib /nodefaultlib:libcmtd.lib /nodefaultlib:msvcrtd.lib
IRIT_LIBC = $(IRIT_LIBCMT)
# /OPT:NOREF is due to FFMPEG that otherwise crashes...
IRITDLL = $(link) /manifest /opt:noref # -section:.data,rws -section:.bss,rws
IRIT_OBJ_PF = obj$(IRIT_64_PF)
IRIT_LIB_PF = $(IRIT_64_PF)
IRIT_EXE_PF = $(IRIT_64_PF)
!ELSE
#
# **** DEBUG ****
#
# Add "-fixed:no -map:$*.map" for IBM quantify/profiling to IRIT???LINK below
#
# Add "-Wp64" for 64 bits test.
#
CFLAGS = -Zi -Od -MDd -RTC1 $(DFLAGS) $(IRIT_URT_INC) $(IRIT_GIF_INC) $(IRIT_PNG_INC) $(IRIT_JPG_INC) $(IRIT_FFMPEG_INC) $(IRIT_XML_INC) $(IRIT_MAGELLAN_INC) $(IRIT_GZIP_INC) $(IRIT_OGL_CG_INC) $(IRIT_OGL_GLUT_INC) $(IRIT_SW_DBG_INC) $(IRIT_SW_DBG_FLAGS) -DDEBUG_IRIT_MALLOC -DDEBUG -D_DEBUG -D_CRTDBG_MAP_ALLOC

LTCG_CL =
LTCG_LNK =

IRITCONLINK = $(link) /manifest $(conflags) $(linkdebug) -fixed:no -map:$*.map
IRITGUILINK = $(link) /manifest $(guiflags) $(linkdebug) # -entry:mainCRTStartup
IRIT_LIBCMT = /nodefaultlib:libcmt.lib /nodefaultlib:libcmtd.lib /nodefaultlib:msvcrt.lib
IRIT_LIBC = $(IRIT_LIBCMT)
IRITDLL = $(link) /manifest $(linkdebug)
IRIT_OBJ_PF = $(DEBUG_PREFIX)obj$(IRIT_64_PF)
IRIT_LIB_PF = $(DEBUG_PREFIX)$(IRIT_64_PF)
IRIT_EXE_PF = $(DEBUG_PREFIX)$(IRIT_64_PF)
!ENDIF

#############################################################################
# IRIT Libraries to use:
#
# For using regular libraries.
#
IRIT_CIRCLINK = $(IRIT_SRC_DIR)/circlink/circlink.$(IRIT_OBJ_PF)
IRIT_LIBS = -libpath:$(IRIT_LIB_DIR) $(IRIT_CIRCLINK) \
	$(EXT_LIB) $(GRAP_LIB) $(USER_LIB) $(RNDR_LIB) \
	$(BOOL_LIB) $(PRSR_LIB) $(MDL_LIB) $(MVAR_LIB) \
	$(TRIM_LIB) $(TRIV_LIB) $(TRNG_LIB) $(SYMB_LIB) \
	$(CAGD_LIB) $(GEOM_LIB) $(MISC_LIB) $(XTRA_LIB) \
	$(IRIT_URT_LIB) $(IRIT_GIF_LIB) $(IRIT_PNG_LIB) \
	$(IRIT_JPG_LIB) $(IRIT_FFMPEG_LIBS) $(IRIT_XML_LIB) \
	$(IRIT_MAGELLAN_LIB) $(IRIT_GZIP_LIB) $(IRIT_OGL_CG_LIB) \
	$(IRIT_OGL_GLUT_LIB) $(IRIT_SW_DBG_LIB)
DO_IRIT_LIB = circlink_dir

#
# For using Dynamically Linked Library
#
# IRIT_LIBS = $(IRIT_LIB_DIR)\irit$(IRIT_LIB_PF).lib $(IRIT_URT_LIB) \
#	$(IRIT_GIF_LIB) $(IRIT_PNG_LIB) $(IRIT_JPG_LIB) \
#	$(IRIT_FFMPEG_LIBS) $(IRIT_MAGELLAN_LIB) $(IRIT_GZIP_LIB) 
#	$(IRIT_OGL_CG_LIB) $(IRIT_OGL_GLUT_LIB) $(IRIT_XML_LIB) \
#	$(IRIT_SW_DBG_LIB)
# DO_IRIT_LIB = irit$(IRIT_LIB_PF).dll

#############################################################################
# Display devices to support
#
GRAPDRVS = nuldrvs$(IRIT_EXE_PF).exe wntdrvs$(IRIT_EXE_PF).exe \
	 wntgdrvs$(IRIT_EXE_PF).exe wntgaiso$(IRIT_EXE_PF).exe \

!iF "$(MACHINE)" == "x64" || "$(COMPILER)" == "VS2012"
GRAPDRVS = nuldrvs$(IRIT_EXE_PF).exe wntdrvs$(IRIT_EXE_PF).exe \
	 wntgdrvs$(IRIT_EXE_PF).exe wntgaiso$(IRIT_EXE_PF).exe
!ELSE
GRAPDRVS = nuldrvs$(IRIT_EXE_PF).exe wntdrvs$(IRIT_EXE_PF).exe \
	 wntgdrvs$(IRIT_EXE_PF).exe wntgaiso$(IRIT_EXE_PF).exe \
	 glutdrvs$(IRIT_EXE_PF).exe
!ENDIF

#
# Default rule for compilation.
#
.c.$(IRIT_OBJ_PF):
	$(IRITCC) $(IRIT_URT_FLAGS) $(IRIT_GIF_FLAGS) $(IRIT_PNG_FLAGS) $(IRIT_JPG_FLAGS) $(IRIT_FFMPEG_FLAGS) $(IRIT_XML_FLAGS) $(IRIT_MAGELLAN_FLAGS) $(IRIT_GZIP_FLAGS) $(IRIT_OGL_CG_FLAGS) $(IRIT_OGL_GLUT_FLAGS) $(IRIT_MORE_FLAGS) $(CFLAGS) -I. -I$(IRIT_INC_DIR) -c -Fo$*.$(IRIT_OBJ_PF) $<

.cpp.$(IRIT_OBJ_PF):
	$(IRITCC) $(IRIT_URT_FLAGS) $(IRIT_GIF_FLAGS) $(IRIT_PNG_FLAGS) $(IRIT_JPG_FLAGS) $(IRIT_FFMPEG_FLAGS) $(IRIT_XML_FLAGS) $(IRIT_MAGELLAN_FLAGS) $(IRIT_GZIP_FLAGS) $(IRIT_OGL_CG_FLAGS) $(IRIT_OGL_GLUT_FLAGS) $(IRIT_MORE_FLAGS) $(CFLAGS) -I. -I$(IRIT_INC_DIR) -c -Fo$*.$(IRIT_OBJ_PF) $<


BOOL_LIB = IritBool$(IRIT_LIB_PF).lib
CAGD_LIB = IritCagd$(IRIT_LIB_PF).lib
EXT_LIB = IritExt$(IRIT_LIB_PF).lib
GEOM_LIB = IritGeom$(IRIT_LIB_PF).lib
GRAP_LIB = IritGrap$(IRIT_LIB_PF).lib
MVAR_LIB = IritMvar$(IRIT_LIB_PF).lib
MDL_LIB  = IritMdl$(IRIT_LIB_PF).lib
MISC_LIB = IritMisc$(IRIT_LIB_PF).lib
PRSR_LIB = IritPrsr$(IRIT_LIB_PF).lib
RNDR_LIB = IritRndr$(IRIT_LIB_PF).lib
SYMB_LIB = IritSymb$(IRIT_LIB_PF).lib
TRIM_LIB = IritTrim$(IRIT_LIB_PF).lib
TRIV_LIB = IritTriv$(IRIT_LIB_PF).lib
TRNG_LIB = IritTrng$(IRIT_LIB_PF).lib
USER_LIB = IritUser$(IRIT_LIB_PF).lib
XTRA_LIB = IritXtra$(IRIT_LIB_PF).lib

INPT_LIB = IritInpt$(IRIT_LIB_PF).lib   # The irit interpreter core as a lib.

GLOBINGCON = setargv.obj
W32CONLIBS = wsock32.lib $(GLOBINGCON) $(conlibs) $(IRIT_LIBC)
W32CONMTLIBS = wsock32.lib $(GLOBINGCON) $(conlibsmt) gdi32.lib $(IRIT_LIBCMT)
W32OPENGLLIBS = opengl32.lib glu32.lib # glaux.lib (for VC++ < 2008)
W32GUISHARED = Shell32.lib wsock32.lib $(GLOBINGCON) comctl32.lib
W32GUILIBS = $(W32GUISHARED) $(guilibs) $(IRIT_LIBC)
W32GUIMTLIBS = $(W32GUISHARED) $(guilibsmt) $(IRIT_LIBCMT)
W32GUIOGLLIBS = $(W32GUISHARED) $(W32OPENGLLIBS) $(guilibs) $(IRIT_LIBC)
W32GUIMTOGLLIBS = $(W32GUISHARED) $(W32OPENGLLIBS) $(guilibsmt) $(IRIT_LIBCMT)
