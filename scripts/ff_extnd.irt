#
# Code to extend a free form curve or surface.
#
#		   Written by Yoni Mizrahi and gershon Elber, June 2012.
#

c1 = cbspline( 3,
               list( ctlpt( E3, 1.7, 0.0, 0 ),
                     ctlpt( E3, 0.7, 0.7, 0 ),
                     ctlpt( E3, 1.7, 0.3, 0 ),
                     ctlpt( E3, 1.5, 0.8, 0 ),
                     ctlpt( E3, 1.6, 1.0, 0 ) ),
               list( KV_OPEN ) );
color( c1, red );
attrib( c1, "dwidth", 3 );


c1e = ffextend( c1, list( true, true ), list( 0.1 ), true );
color( c1e, green );

interact( list( c1, c1e ) );

c2 = cbspline( 4,
               list( ctlpt( E3,  0.7, 0.0, 0 ),
                     ctlpt( E3, -0.7, 0.2, 0 ),
                     ctlpt( E3,  0.7, 0.5, 0 ),
                     ctlpt( E3, -0.7, 0.7, 0 ),
                     ctlpt( E3,  0.7, 1.0, 0 ) ) ,
               list( KV_OPEN ) );
color( c2, red );
attrib( c2, "dwidth", 3 );


c2e = ffextend( c2, list( true, true ), list( 0.01 ), true );
color( c2e, green );

interact( list( c2, c2e ) );

#
# Compare the two curves:
#
printf( "Extended curves test:  %d  %d\\n", 
	list( cregion( c1e, 0.0, 1.0 ) == c1,
	      cregion( c2e, 0.0, 1.0 ) == c2 ) );

save( "ff1extnd", list( c1, c1e, c2, c2e ) );

free( c1 );
free( c1e );
free( c2 );
free( c2e );

#################################

srf1 = sbspline( 3, 4,
		 list( list( ctlpt( E3, 0.0, 0.0, 1.0 ),
		             ctlpt( E2, 0.0, 1.0 ),
		             ctlpt( E3, 0.0, 2.0, 1.0 ) ),
        	       list( ctlpt( E2, 1.0, 0.0 ),
		             ctlpt( E3, 1.0, 1.0, 2.0 ),
		             ctlpt( E2, 1.0, 2.0 ) ),
        	       list( ctlpt( E3, 2.0, 0.0, 2.0 ),
	        	     ctlpt( E2, 2.0, 1.0 ),
		             ctlpt( E3, 2.0, 2.0, 2.0 ) ),
        	       list( ctlpt( E2, 3.0, 0.0 ),
	        	     ctlpt( E3, 3.0, 1.0, 2.0 ),
		             ctlpt( E2, 3.0, 2.0 ) ),
        	       list( ctlpt( E3, 4.0, 0.0, 1.0 ),
	        	     ctlpt( E2, 4.0, 1.0 ),
		             ctlpt( E3, 4.0, 2.0, 1.0 ) ) ),
		 list( list( KV_OPEN ),
		       list( KV_OPEN ) ) );
color( srf1, red );
attrib( srf1, "dwidth", 3 );


srf1e = ffextend( srf1, list( true, false, true, false ),
		  list( 0.05, 0.05 ), true );
color( srf1e, green );

interact( list( srf1, srf1e ) );


srf1e = ffextend( srf1, list( true, true, true, true ),
		  list( 0.035, 0.05 ), true );
color( srf1e, green );

interact( list( srf1, srf1e ) );





gcross = cbspline( 3,
		   list( ctlpt( E3, 0.3, 0.0, 0.0 ),
		         ctlpt( E3, 0.3, 0.0, 0.05 ),
		         ctlpt( E3, 0.1, 0.0, 0.05 ),
		         ctlpt( E3, 0.1, 0.0, 0.4 ),
		         ctlpt( E3, 0.5, 0.0, 0.4 ),
		         ctlpt( E3, 0.6, 0.0, 0.8 ) ),
		   list( 0, 0, 0, 1, 2, 3, 4, 4, 4 ) );
srf2 = sregion( surfprev( gcross ), col, 0, 2 );
free( gcross );
color( srf2, red );


srf2e = ffextend( srf2, list( true, false, true, false ),
		  list( 0.1, 0.2 ), true );
color( srf2e, green );

interact( list( srf2, srf2e ) );


srf2e = ffextend( srf2, list( true, true, true, true ),
		  list( 0.2, 0.3 ), true );
color( srf2e, green );

interact( list( srf2, srf2e ) );

#
# Compare the two surfaces:
#
printf( "Extended surfaces test:  %d  %d\\n", 
	list( sregion( sregion( srf1e, row, 0, 1 ), col, 0, 1 ) == srf1,
	      sregion( sregion( srf2e, row, 0, 4 ), col, 0, 2 ) == srf2 ));

save( "ff2extnd", list( srf1, srf1e, srf2, srf2e ) );

free( srf1 );
free( srf1e );
free( srf2 );
free( srf2e );

#################################
